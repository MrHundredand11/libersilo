{
    "ls_id": "LS-DGTL-CODE-WEB-JS",
    "ls_ttl": "JavaScript",
    "ls_url": "/ls/dgtl/code/web/js.json",
    "scion_id": "ls_dgtl_code_web_js",
    "scions": [
        {
            "drct_id": "DATA",
            "drct_ttl": "Data Types + Values in 'JavaScript'",
            "scion_id": "ls_dgtl_code_web_js_data",
            "scions": [
                {
                    "insc_typ1": "stm",
                    "insc_typ2": "brnch",
                    "insc_tag": "Value Types",
                    "insc_ttl": "<span class='styl_stm_ttl_spprt'>Types</span>&nbsp;<span class='styl_stm_ttl_tny'>of</span>&nbsp;<span class='styl_stm_ttl_opncls'>(</span><span class='styl_stm_ttl_trm'>Values</span><span class='styl_stm_ttl_opncls'>)</span>",
                    "scions": [
                        {
                            "insc_typ1": "insc",
                            "insc_typ2": "txt",
                            "insc_cntn": "In&nbsp;<span class='styl_insc_txt_trm_grg'>JavaScript</span>, there are only <b>two types</b> of '<span class='styl_insc_txt_stkitc'>values</span>':\n\t\t<span class='styl_insc_trms_lttr_01'>an Object</span>&nbsp;or&nbsp;<span class='styl_insc_trms_lttr_01'>a Primitive</span>"
                        }
                    ]
                }
            ]
        },
        {
            "drct_id": "OPRT",
            "drct_ttl": "Operators in 'JavaScript'",
            "scion_id": "ls_dgtl_code_web_js_oprt",
            "scions": [
                {
                    "insc_typ1": "stm",
                    "insc_typ2": "brnch",
                    "insc_ttl": "<span class='styl_stm_ttl_spprt'>Descriptions</span>&nbsp;<span class='styl_stm_ttl_tny'>of</span>&nbsp;<span class='styl_stm_ttl_opncls'>(</span><span class='styl_stm_ttl_trm'>Operators</span><span class='styl_stm_ttl_opncls'>)</span>",
                    "scions": [
                        {
                            "insc_typ1": "insc",
                            "insc_typ2": "txt",
                            "insc_pntr": "=>",
                            "insc_cntn": "<span class='styl_insc_txt_trm_grg'>operator</span>&nbsp;= is a character that performs a task in our code",
                            "scions": [
                                {
                                    "insc_typ1": "insc",
                                    "insc_typ2": "trm_stpl",
                                    "insc_sld": "|\\_",
                                    "insc_pntr": ">>",
                                    "insc_tag": "Example",
                                    "insc_term": "Add: +"
                                },
                                {
                                    "insc_typ1": "insc",
                                    "insc_typ2": "trm_stpl",
                                    "insc_sld": "|\\_",
                                    "insc_pntr": ">>",
                                    "insc_tag": "Example",
                                    "insc_term": "Subtract: -"
                                },
                                {
                                    "insc_typ1": "insc",
                                    "insc_typ2": "trm_stpl",
                                    "insc_sld": "|\\_",
                                    "insc_pntr": ">>",
                                    "insc_tag": "Example",
                                    "insc_term": "Multiply: *"
                                },
                                {
                                    "insc_typ1": "insc",
                                    "insc_typ2": "trm_stpl",
                                    "insc_sld": "|\\_",
                                    "insc_pntr": ">>",
                                    "insc_tag": "Example",
                                    "insc_term": "Divide: /"
                                },
                                {
                                    "insc_typ1": "insc",
                                    "insc_typ2": "trm_stpl",
                                    "insc_sld": "|\\_",
                                    "insc_pntr": ">>",
                                    "insc_tag": "Example",
                                    "insc_term": "Remainder: %"
                                }
                            ]
                        }
                    ]
                },
                {
                    "insc_typ1": "stm",
                    "insc_typ2": "brnch",
                    "insc_ttl": "<span class='styl_stm_ttl_spprt'>List</span>&nbsp;<span class='styl_stm_ttl_tny'>of all</span>&nbsp;<span class='styl_stm_ttl_opncls'>(</span><span class='styl_stm_ttl_trm'>Operators</span><span class='styl_stm_ttl_opncls'>)</span>&nbsp;<span class='styl_stm_ttl_tny'>in</span>&nbsp;<span class='styl_stm_ttl_spprt'>JavaScript</span>",
                    "scions": [
                        {
                            "insc_typ1": "insc",
                            "insc_typ2": "trm",
                            "insc_term": "="
                        },
                        {
                            "insc_typ1": "insc",
                            "insc_typ2": "trm",
                            "insc_term": "=="
                        },
                        {
                            "insc_typ1": "insc",
                            "insc_typ2": "trm",
                            "insc_term": "==="
                        },
                        {
                            "insc_typ1": "insc",
                            "insc_typ2": "trm",
                            "insc_term": "!=="
                        },
                        {
                            "insc_typ1": "insc",
                            "insc_typ2": "trm",
                            "insc_term": "+="
                        },
                        {
                            "insc_typ1": "insc",
                            "insc_typ2": "trm",
                            "insc_term": "*="
                        },
                        {
                            "insc_typ1": "insc",
                            "insc_typ2": "trm",
                            "insc_term": "+"
                        },
                        {
                            "insc_typ1": "insc",
                            "insc_typ2": "trm",
                            "insc_term": "-"
                        },
                        {
                            "insc_typ1": "insc",
                            "insc_typ2": "trm",
                            "insc_term": "*"
                        },
                        {
                            "insc_typ1": "insc",
                            "insc_typ2": "trm",
                            "insc_term": "/"
                        },
                        {
                            "insc_typ1": "insc",
                            "insc_typ2": "trm",
                            "insc_term": "%"
                        },
                        {
                            "insc_typ1": "insc",
                            "insc_typ2": "trm",
                            "insc_term": "**"
                        },
                        {
                            "insc_typ1": "insc",
                            "insc_typ2": "trm",
                            "insc_term": "++"
                        },
                        {
                            "insc_typ1": "insc",
                            "insc_typ2": "trm",
                            "insc_term": "--"
                        },
                        {
                            "insc_typ1": "insc",
                            "insc_typ2": "trm",
                            "insc_term": ">"
                        },
                        {
                            "insc_typ1": "insc",
                            "insc_typ2": "trm",
                            "insc_term": ">="
                        },
                        {
                            "insc_typ1": "insc",
                            "insc_typ2": "trm",
                            "insc_term": "<"
                        },
                        {
                            "insc_typ1": "insc",
                            "insc_typ2": "trm",
                            "insc_term": "<="
                        },
                        {
                            "insc_typ1": "insc",
                            "insc_typ2": "trm",
                            "insc_term": "&&"
                        },
                        {
                            "insc_typ1": "insc",
                            "insc_typ2": "trm",
                            "insc_term": "||"
                        },
                        {
                            "insc_typ1": "insc",
                            "insc_typ2": "trm",
                            "insc_term": "="
                        },
                        {
                            "insc_typ1": "insc",
                            "insc_typ2": "trm",
                            "insc_term": "|"
                        },
                        {
                            "insc_typ1": "insc",
                            "insc_typ2": "trm",
                            "insc_term": "?"
                        }
                    ]
                }
            ]
        },
        {
            "drct_id": "NMBR",
            "drct_ttl": "Numbers in 'JavaScript'"
        },
        {
            "drct_id": "CTRL",
            "drct_ttl": "Control Structures in 'JavaScript'",
            "scion_id": "ls_dgtl_code_web_js_ctrl",
            "scions": [
                {
                    "insc_typ1": "stm",
                    "insc_typ2": "lst_exp",
                    "insc_ttl": "<span class='stm_ttl'><b><u>Exploration</b></u> <i>of</i> (<b><i>Control Structures</b></i>) <i>in</i> <b><u>JavaScript</b></u></span>",
                    "scion_id": "ls_dgtl_code_web_js_ctrl_explr",
                    "scions": [
                        {
                            "insc_term": "Conditional Flow // Decision Structures",
                            "scion_id": "ls_dgtl_code_web_js_ctrl_explr_dcsn",
                            "scions": [
                                {
                                    "insc_typ1": "stm",
                                    "insc_typ2": "lst_exp",
                                    "insc_ttl": "<span class='stm_ttl'><b><u>Exploration</b></u> <i>of</i> (<b><i>Control Decision Structures</b></i>)</span>",
                                    "scion_id": "ls_dgtl_code_web_js_ctrl_explr_dcsn_ctrldcsn",
                                    "scions": [
                                        {
                                            "insc_term": "if"
                                        },
                                        {
                                            "insc_term": "if else"
                                        },
                                        {
                                            "insc_term": "else if"
                                        },
                                        {
                                            "insc_term": "switch"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "insc_term": "Iterative Flow // Loop Structures",
                            "scion_id": "ls_dgtl_code_web_js_ctrl_explr_itrt",
                            "scions": [
                                {
                                    "insc_typ1": "stm",
                                    "insc_typ2": "lst_exp",
                                    "insc_ttl": "<span class='stm_ttl'><b><u>Exploration</b></u> <i>of</i> (<b><i>Iteration Loops</b></i>) <i>in</i> <b><u>JavaScript</b></u></span>",
                                    "scion_id": "ls_dgtl_code_web_js_ctrl_explr_itrt_loopstrct"
                                },
                                {
                                    "insc_typ1": "stm",
                                    "insc_typ2": "lst_exp",
                                    "insc_ttl": "<span class='stm_ttl'><b><u>Exploration</b></u> <i>of</i> (<b><i>Iteration Methods</b></i>) <i>in</i> <b><u>JavaScript</b></u></span>",
                                    "scion_id": "ls_dgtl_code_web_js_ctrl_explr_itrt_methods"
                                }
                            ]
                            
                        }
                    ]
                }
            ]
        },
        {
            "drct_id": "SCOP",
            "drct_ttl": "Scope in 'JavaScript'",
            "scion_id": "ls_dgtl_code_web_js_scop",
            "scions": [
                {
                    "insc_typ1": "stm",
                    "insc_typ2": "lst_exp",
                    "insc_ttl": "<span class='stm_ttl'><i>The</i> <b><u>3 Types</b></u> <i>of</i> (<b><i>Scope</b></i>) <i>in</i> <b><u>JavaScript</b></u></span>",
                    "scion_id": "ls_dgtl_code_web_js_scop_type",
                    "scions": [
                        {
                            "insc_term": "Global Scope",
                            "scions": [
                                {
                                    "insc_typ1": "insc",
                                    "insc_typ2": "txt",
                                    "insc_cntn": "In <b>global scope</b>, variables are declared outside of blocks. These variables are called <b>global variables</b>. Because global variables are not bound inside a block, they can be accessed by any code in the program, including code in blocks."
                                }
                            ]
                        },
                        {
                            "insc_term": "Function Scope"
                        },
                        {
                            "insc_term": "Block Scope"
                        }
                    ]
                }
            ]
        },
        {
            "drct_id": "FUNC",
            "drct_ttl": "Functions in 'JavaScript'",
            "scion_id": "ls_dgtl_code_web_js_func"
        },
        {
            "drct_id": "OUTP",
            "drct_ttl": "Output in 'JavaScript'",
            "scion_id": "ls_dgtl_code_web_js_outp"
        },
        {
            "drct_id": "ERRR",
            "drct_ttl": "Errors + Debugging in 'JavaScript'",
            "scion_id": "ls_dgtl_code_web_js_errr",
            "scions": [
                {
                    "insc_typ1": "stm",
                    "insc_typ2": "lst_exp",
                    "insc_ttl": "<span class='stm_ttl'><b><u>List</b></u> <i>of</i> <b><u>Types</b></u> <i>of</i> (<b><i>Errors</b></i>) <i>in</i> <b><u>JavaScript</b></u></span>",
                    "scion_id": "ls_dgtl_code_web_js_errr_typ_lst",
                    "scions": [
                        {
                            "insc_term": "SyntaxError",
                            "scion_id": "ls_dgtl_code_web_js_errr_typ_lst_i_sntx"
                        },
                        {
                            "insc_term": "ReferenceError",
                            "scion_id": "ls_dgtl_code_web_js_errr_typ_lst_i_rfrn"
                        },
                        {
                            "insc_term": "TypeError",
                            "scion_id": "ls_dgtl_code_web_js_errr_typ_lst_i_type"
                        }
                    ]
                },
                {
                    "insc_typ1": "stm",
                    "insc_typ2": "brnch",
                    "insc_ttl": "<span class='stm_ttl'>(<b><i>Debugging</b></i>) <i>with</i></span>&nbsp;<span class='stm_code'><b><u>console.log()</b></u></span>",
                    "scion_id": "ls_dgtl_code_web_js_errr_dbug_clog"
                }
            ]
        }
    ]
}
